<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml" xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core" xmlns:p="http://primefaces.org/ui"
	xmlns:ui="http://java.sun.com/jsf/facelets" template="/WEB-INF/templates/main.xhtml">

<ui:define name="metadata">
		<f:metadata>
		    <f:viewParam name="courseName" value="#{addEditCourseController.courseName}" />
		    <f:viewAction action="#{addEditCourseController.initAfterViewParams}" />
		</f:metadata>
		
</ui:define>


	<ui:define name="content">

		<h:form id="form">
			<h:panelGrid id="grid" columns="2" styleClass="tableborder" cellpadding="5"
				columnClasses="tableborder vertical-top,tableborder vertical-top fill">
				<p:panelGrid id="grid-course" columns="2" columnClasses="tableborder,tableborder">
					<f:facet name="header">
						<p:row>
							<p:column colspan="2">
								<h:outputText value="#{addEditCourseController.title}" />
							</p:column>
						</p:row>
					</f:facet>

					<p:outputLabel value="#{msg['course.name']}" for="name" />
					<p:inputText id="name" value="#{addEditCourseController.course.name}" />

					<p:outputLabel for="minScore" value="#{msg['course.minScore']}" />
					<p:inputText id="minScore" value="#{addEditCourseController.course.minScoreToPass}" />

					<p:outputLabel for="duration" value="#{msg['course.duration']}" />
					<p:inputText id="duration" value="#{addEditCourseController.course.allowedDuration}" converter="DurationMinutesConverter" />


				</p:panelGrid>

				<p:panelGrid id="grid-questions" styleClass="fill" columns="1" columnClasses="tableborder">
					<f:facet name="header">
						<p:row>
							<p:column>
								<h:outputText value="#{msg['addEditCourse.questions']}" />
							</p:column>
						</p:row>
					</f:facet>
					<p>#{msg['course.question.explanation']}</p>


					<!-- 
						1. ItemLabel is not visible on the GUI itself, as columns are used. However, for filtering purposes it is necessary 
					    2. Although q references the DualListModel class, it can be used here for the underlying type
					    3. A converter must be named here by ConverterID. Using the annotation forClass does not work here
					    4. Only with a converter, the ValueChangeEvent method yields a value of the entity type (Question), otherwise, you will only get a String
					-->
					<p:pickList id="questionPickList" value="#{addEditCourseController.questionDualListModel}"
						var="q" effect="bounce" itemValue="#{q}" itemLabel="#{q.questionText} #{q.code}"  showSourceControls="true" converter="QuestionConverter"
						showTargetControls="true" showCheckbox="false" responsive="true" showSourceFilter="true"
						showTargetFilter="true" filterMatchMode="contains">

						<p:ajax event="select" listener="#{addEditCourseController.onQuestionSelected}" update="question" />
						<p:ajax event="transfer" listener="#{addEditCourseController.onQuestionTransferred}" update="question" />

						<f:facet name="sourceCaption">Available</f:facet>
						<f:facet name="targetCaption">Selected</f:facet>

						<p:column>
							<h:outputText value="#{q.code}" />
						</p:column>

					</p:pickList>

					<p:panel id="question" header="#{addEditCourseController.selectedQuestion.code}" footer="#{addEditCourseController.selectedQuestion.points} Point(s)">
				            <h:outputText
				                value="#{addEditCourseController.selectedQuestion.questionText}" />
				    </p:panel>

				</p:panelGrid>
			</h:panelGrid>


			<p:commandButton ajax="false" action="#{addEditCourseController.ok()}" value="#{msg.ok}">
			</p:commandButton>

			<p:commandButton ajax="false" immediate="true" action="#{addEditCourseController.cancel()}"
				value="#{msg.cancel}">
			</p:commandButton>
		</h:form>
	</ui:define>
</ui:composition>

